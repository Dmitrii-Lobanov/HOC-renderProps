{"ast":null,"code":"import _slicedToArray from \"/Users/dmitriilobanov/Documents/projects/airport-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmitriilobanov/Documents/projects/airport-demo/src/App.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '../src/i18n/i18n';\nimport OptionsContainer from '../src/containers/OptionsContainer';\nimport chooseLanguage from './store/actions/actions';\nimport './App.css';\n\nfunction App(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isClicked = _useState2[0],\n        setIsClicked = _useState2[1];\n\n  function hasClicked(lng) {\n    setIsClicked(true);\n    i18n.changeLanguage(lng);\n    props.chooseLanguage(lng);\n  }\n\n  if (!isClicked) {\n    return React.createElement(\"div\", {\n      className: \"choose-lang-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => hasClicked('ru'),\n      className: \"btn btn-ru\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => hasClicked('en'),\n      className: \"btn btn-en\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(OptionsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n}\n\nconst mapsStateToProps = state => ({\n  lng: state.ui.lng\n});\n\nexport default connect(mapsStateToProps, chooseLanguage)(App);","map":{"version":3,"sources":["/Users/dmitriilobanov/Documents/projects/airport-demo/src/App.js"],"names":["React","useState","connect","i18n","OptionsContainer","chooseLanguage","App","props","isClicked","setIsClicked","hasClicked","lng","changeLanguage","mapsStateToProps","state","ui"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,oBACkBN,QAAQ,CAAC,KAAD,CAD1B;AAAA;AAAA,QACTO,SADS;AAAA,QACEC,YADF;;AAGhB,WAASC,UAAT,CAAoBC,GAApB,EAAyB;AACrBF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,IAAAA,IAAI,CAACS,cAAL,CAAoBD,GAApB;AACAJ,IAAAA,KAAK,CAACF,cAAN,CAAqBM,GAArB;AACH;;AAED,MAAG,CAACH,SAAJ,EAAe;AACX,WACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAME,UAAU,CAAC,IAAD,CAAjC;AAAyC,MAAA,SAAS,EAAC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,IAAD,CAAjC;AAAyC,MAAA,SAAS,EAAC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH,GAPD,MAOO;AACH,WAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ;;AAED,MAAMG,gBAAgB,GAAGC,KAAK,KAAK;AAC/BH,EAAAA,GAAG,EAAEG,KAAK,CAACC,EAAN,CAASJ;AADiB,CAAL,CAA9B;;AAIA,eAAeT,OAAO,CAClBW,gBADkB,EAElBR,cAFkB,CAAP,CAGbC,GAHa,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '../src/i18n/i18n';\nimport OptionsContainer from '../src/containers/OptionsContainer';\nimport chooseLanguage from './store/actions/actions';\nimport './App.css';\n\nfunction App(props) {  \n    const [isClicked, setIsClicked] = useState(false);\n\n    function hasClicked(lng) {\n        setIsClicked(true);\n        i18n.changeLanguage(lng);\n        props.chooseLanguage(lng);\n    }\n    \n    if(!isClicked) {\n        return (\n            <div className=\"choose-lang-container\">\n                <button onClick={() => hasClicked('ru')} className=\"btn btn-ru\"></button>\n                <button onClick={() => hasClicked('en')} className=\"btn btn-en\"></button>\n            </div>\n        )\n    } else {\n        return <OptionsContainer />\n    }\n}\n\nconst mapsStateToProps = state => ({\n    lng: state.ui.lng\n})\n\nexport default connect(\n    mapsStateToProps,\n    chooseLanguage\n)(App);"]},"metadata":{},"sourceType":"module"}