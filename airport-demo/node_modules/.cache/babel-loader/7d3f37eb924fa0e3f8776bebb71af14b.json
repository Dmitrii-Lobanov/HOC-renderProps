{"ast":null,"code":"import _slicedToArray from \"/Users/dmitriilobanov/Documents/projects/airport-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmitriilobanov/Documents/projects/airport-demo/src/components/schedule/FlightScheduleContent.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withTranslation } from 'react-i18next';\nimport DeparturesTable from './DeparturesTable';\nimport ArrivalsTable from './ArrivalsTable';\nimport chooseLanguage from '../../store/actions/actions';\n\nfunction FlightScheduleContent({\n  flights,\n  t\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isEmptyArrivalState = _useState2[0],\n        setIsEmptyArrivalState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isEmptyDepartureState = _useState4[0],\n        setIsEmptyDepartureState = _useState4[1];\n\n  function addArrivalsTable() {\n    setIsEmptyArrivalState(!isEmptyArrivalState);\n  }\n\n  function addDeparturesTable() {\n    setIsEmptyDepartureState(!isEmptyDepartureState);\n  } //console.log('Schedule flights: ', flights);\n\n\n  const departures = flights.filter(t => t.status === 'departure'); //console.log('!!Departure flights: ', departuresflights);\n\n  const arrivals = flights.filter(t => t.status === 'arrival'); //console.log('!!Arrivals flights: ', arrivalsflights);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-flight-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-flight\",\n    onClick: () => {\n      addDeparturesTable();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, t('Schedule.departureBtn')), React.createElement(\"button\", {\n    className: \"btn-flight\",\n    onClick: () => addArrivalsTable(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, t('Schedule.arrivalBtn'))), isEmptyDepartureState && !isEmptyArrivalState && React.createElement(DeparturesTable, {\n    data: departures,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), isEmptyArrivalState && !isEmptyDepartureState && React.createElement(ArrivalsTable, {\n    data: arrivals,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    flights: state.schedule,\n    isBackClicked: state.ui.isBackBtnClicked\n  };\n};\n\nexport default connect(mapStateToProps, chooseLanguage)(withTranslation()(FlightScheduleContent));","map":{"version":3,"sources":["/Users/dmitriilobanov/Documents/projects/airport-demo/src/components/schedule/FlightScheduleContent.js"],"names":["React","useState","connect","withTranslation","DeparturesTable","ArrivalsTable","chooseLanguage","FlightScheduleContent","flights","t","isEmptyArrivalState","setIsEmptyArrivalState","isEmptyDepartureState","setIsEmptyDepartureState","addArrivalsTable","addDeparturesTable","departures","filter","status","arrivals","mapStateToProps","state","schedule","isBackClicked","ui","isBackBtnClicked"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,SAASC,qBAAT,CAA+B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA/B,EAA+C;AAAA,oBACWR,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,QACpCS,mBADoC;AAAA,QACfC,sBADe;;AAAA,qBAEeV,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAEpCW,qBAFoC;AAAA,QAEbC,wBAFa;;AAI3C,WAASC,gBAAT,GAA2B;AACvBH,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACH;;AAED,WAASK,kBAAT,GAA6B;AACzBF,IAAAA,wBAAwB,CAAC,CAACD,qBAAF,CAAxB;AACH,GAV0C,CAY3C;;;AACA,QAAMI,UAAU,GAAGR,OAAO,CAACS,MAAR,CAAeR,CAAC,IAAIA,CAAC,CAACS,MAAF,KAAa,WAAjC,CAAnB,CAb2C,CAc3C;;AACA,QAAMC,QAAQ,GAAGX,OAAO,CAACS,MAAR,CAAeR,CAAC,IAAIA,CAAC,CAACS,MAAF,KAAa,SAAjC,CAAjB,CAf2C,CAgB3C;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACQ,IAAA,SAAS,EAAC,YADlB;AAEQ,IAAA,OAAO,EAAE,MAAM;AACXH,MAAAA,kBAAkB;AAAG,KAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKSN,CAAC,CAAC,uBAAD,CALV,CADA,EAQI;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,OAAO,EAAE,MAAMK,gBAAgB,EAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKL,CAAC,CAAC,qBAAD,CAJN,CARJ,CADJ,EAgBMG,qBAAqB,IAAI,CAACF,mBAA1B,IAAiD,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEM,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBvD,EAiBMN,mBAAmB,IAAI,CAACE,qBAAxB,IAAiD,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEO,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBvD,CADJ;AAqBH;;AACD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHb,IAAAA,OAAO,EAAEa,KAAK,CAACC,QADZ;AAEHC,IAAAA,aAAa,EAAEF,KAAK,CAACG,EAAN,CAASC;AAFrB,GAAP;AAIH,CALD;;AAOA,eAAevB,OAAO,CAClBkB,eADkB,EAElBd,cAFkB,CAAP,CAGbH,eAAe,GAAGI,qBAAH,CAHF,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withTranslation } from 'react-i18next';\nimport DeparturesTable from './DeparturesTable';\nimport ArrivalsTable from './ArrivalsTable';\nimport chooseLanguage from '../../store/actions/actions';\n\nfunction FlightScheduleContent({ flights, t }) {\n    const [isEmptyArrivalState, setIsEmptyArrivalState] = useState(false);\n    const [isEmptyDepartureState, setIsEmptyDepartureState] = useState(false);\n\n    function addArrivalsTable(){\n        setIsEmptyArrivalState(!isEmptyArrivalState);        \n    }\n\n    function addDeparturesTable(){\n        setIsEmptyDepartureState(!isEmptyDepartureState);\n    }\n\n    //console.log('Schedule flights: ', flights);\n    const departures = flights.filter(t => t.status === 'departure');\n    //console.log('!!Departure flights: ', departuresflights);\n    const arrivals = flights.filter(t => t.status === 'arrival');\n    //console.log('!!Arrivals flights: ', arrivalsflights);\n\n    return (\n        <div>\n            <div className=\"btn-flight-container\">\n            <button \n                    className=\"btn-flight\" \n                    onClick={() => {\n                        addDeparturesTable()}}\n                >\n                    {t('Schedule.departureBtn')}\n                </button>\n                <button \n                    className=\"btn-flight\" \n                    onClick={() => addArrivalsTable()}\n                    >\n                    {t('Schedule.arrivalBtn')}\n                </button>\n            </div>\n            { isEmptyDepartureState && !isEmptyArrivalState && <DeparturesTable data={departures}   /> }\n            { isEmptyArrivalState && !isEmptyDepartureState && <ArrivalsTable data={arrivals} />  }\n        </div> \n    )\n}\nconst mapStateToProps = state => {\n    return {\n        flights: state.schedule,\n        isBackClicked: state.ui.isBackBtnClicked\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    chooseLanguage\n)(withTranslation()(FlightScheduleContent));"]},"metadata":{},"sourceType":"module"}