{"ast":null,"code":"import { __values, __assign, __spread } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, isPromiseLike, isObservable, isMachine, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, uniqueId } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { isActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService } from './devTools.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\n/**\r\n * Maintains a stack of the current service in scope.\r\n * This is used to provide the correct service to spawn().\r\n *\r\n * @private\r\n */\n\nvar withServiceScope =\n/*#__PURE__*/\nfunction () {\n  var serviceStack = [];\n  return function (service, fn) {\n    service && serviceStack.push(service);\n    var result = fn(service || serviceStack[serviceStack.length - 1]);\n    service && serviceStack.pop();\n    return result;\n  };\n}();\n\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this._status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this._status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to stopped service \\\"\" + _this.machine.id + \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n\n        return _this.state;\n      }\n\n      if (_this._status === InterpreterStatus.NotStarted && _this.options.deferEvents) {\n        // tslint:disable-next-line:no-console\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\" and is deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n      } else if (_this._status !== InterpreterStatus.Running) {\n        throw new Error(\"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \" + JSON.stringify(_event.data));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isActor(to) ? to : _this.children.get(to) || registry.get(to);\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\" + to + \"' from service '\" + _this.id + \"'.\");\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\" + _this.id + \"' has no parent: unable to send event \" + event.type);\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\" + error(_this.id) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return withServiceScope(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this._status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\" + this.id + \"'. Make sure the service is started first.\");\n      }\n\n      return this._state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Dev tools\n\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.data ? mapContext(finalChildStateNode.data, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, // @ts-ignore\n  errorListener, completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this._status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : withServiceScope(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    } // Stop all children\n\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.initialized = false;\n    this._status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(event));\n      }\n    } else if (this._status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\");\n    }\n\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = withServiceScope(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spread(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = withServiceScope(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\" + event + \"' from interpreter '\" + this.id + \"' to nonexistant child '\" + id + \"'.\");\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = getActionFunction(action.type, actionFunctionMap) || action.exec;\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[activity.src] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\" + activity.src + \"' in in machine '\" + this.machine.id + \"'). \" + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\" + activity.src + \"' in machine '\" + this.machine.id + \"'.\");\n              }\n\n              return;\n            }\n\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data) : serviceCreator;\n\n            if (isPromiseLike(source)) {\n              this.state.children[id] = this.spawnPromise(Promise.resolve(source), id);\n            } else if (isFunction(source)) {\n              this.state.children[id] = this.spawnCallback(source, id);\n            } else if (isObservable(source)) {\n              this.state.children[id] = this.spawnObservable(source, id);\n            } else if (isMachine(source)) {\n              // TODO: try/catch here\n              this.state.children[id] = this.spawnMachine(data ? source.withContext(mapContext(data, context, _event)) : source, {\n                id: id,\n                autoForward: autoForward\n              });\n            }\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\" + action.type + \"'\");\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId);\n    delete this.state.children[childId];\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isActor(entity)) {\n      return this.spawnActor(entity);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\" + name + \"\\\" of type \\\"\" + typeof entity + \"\\\".\");\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    return actor;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n\n    var canceled = false;\n    promise.then(function (response) {\n      if (!canceled) {\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          next && next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          complete && complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          handleError(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n\n    var receive = function (e) {\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(e);\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n\n    var subscription = source.subscribe(function (value) {\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor) {\n    this.children.set(actor.id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\" + activity.type + \"'\");\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    });\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    if (this.options.devTools && typeof window !== 'undefined') {\n      if (window.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions =\n  /*#__PURE__*/\n  function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return global.setTimeout.call(null, fn, ms);\n        },\n        clearTimeout: function (id) {\n          return global.clearTimeout.call(null, id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof window === 'undefined' ? global : window);\n\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar createNullActor = function (name) {\n  if (name === void 0) {\n    name = 'null';\n  }\n\n  return {\n    id: name,\n    send: function () {\n      return void 0;\n    },\n    subscribe: function () {\n      // tslint:disable-next-line:no-empty\n      return {\n        unsubscribe: function () {}\n      };\n    },\n    toJSON: function () {\n      return {\n        id: name\n      };\n    }\n  };\n};\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return withServiceScope(undefined, function (service) {\n    if (!IS_PRODUCTION) {\n      warn(!!service, \"Attempted to spawn an Actor (ID: \\\"\" + (isMachine(entity) ? entity.id : 'undefined') + \"\\\") outside of a service. This will have no effect.\");\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createNullActor(resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, interpret, spawn };","map":{"version":3,"sources":["/Users/dmitriilobanov/Documents/projects/airport-demo/node_modules/xstate/es/interpreter.js"],"names":["__values","__assign","__spread","IS_PRODUCTION","warn","mapContext","isFunction","keys","toSCXMLEvent","isPromiseLike","isObservable","isMachine","reportUnhandledExceptionOnInvocation","symbolObservable","isArray","toEventObject","isString","uniqueId","ActionTypes","SpecialTargets","isInFinalState","errorPlatform","log","stop","start","cancel","send","update","error","error$1","doneInvoke","initEvent","getActionFunction","isState","State","bindActionToState","isActor","Scheduler","registry","registerService","DEFAULT_SPAWN_OPTIONS","sync","autoForward","withServiceScope","serviceStack","service","fn","push","result","length","pop","InterpreterStatus","Interpreter","machine","options","_this","defaultOptions","scheduler","delayedEventsMap","listeners","Set","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","initialized","_status","NotStarted","children","Map","forwardTo","init","event","payload","batch","state","_event","Stopped","name","id","JSON","stringify","data","deferEvents","Running","Error","schedule","forward","nextState","_state","sendTo","to","isParent","parent","Parent","target","get","type","origin","sessionId","resolvedOptions","clock","logger","resolvedId","undefined","bookId","Object","defineProperty","prototype","_initialState","initialState","enumerable","configurable","execute","actionsConfig","e_1","_a","_b","actions","_c","next","done","action","value","exec","e_1_1","return","call","e_2","e_3","e_4","e_5","_d","_sessionid","devTools","_e","_f","listener","e_2_1","_g","_h","e_3_1","_j","_k","contextListener","context","history","e_4_1","isDone","configuration","finalChildStateNode","find","sn","doneData","_l","_m","e_5_1","onTransition","add","subscribe","nextListenerOrObserver","errorListener","completeListener","unsubscribe","resolvedCompleteListener","bind","complete","onDone","delete","onEvent","onSend","onChange","onStop","off","register","resolvedState","resolveState","from","attachDev","initialize","e_6","e_7","e_8","e_9","e_10","e_6_1","e_7_1","e_8_1","_o","e_9_1","forEach","child","_p","_q","key","clearTimeout","e_10_1","clear","free","events","e_11","batchChanged","batchedActions","_loop_1","event_1","transition","apply","map","a","changed","events_1","events_1_1","e_11_1","sender","indexOf","nextEvents","some","nextEvent","e_12","e_12_1","defer","sendAction","setTimeout","delay","sendId","actionFunctionMap","actionOrExec","err","activity","activities","Invoke","serviceCreator","services","src","source","spawnPromise","Promise","resolve","spawnCallback","spawnObservable","spawnMachine","withContext","spawnActivity","stopChild","label","childId","spawn","entity","spawnActor","childService","doneEvent","actor","set","promise","canceled","then","response","errorData","errorEvent","strict","handleError","unsubscribed","toJSON","callback","receivers","receive","e","callbackStop","newListener","receiver","subscription","implementation","dispose","spawnEffect","window","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","features","jump","skip","global","ms","console","interpret","createNullActor","resolveSpawnOptions","nameOrOptions","interpreter"],"mappings":"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","sourcesContent":["import { __values, __assign, __spread } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, isPromiseLike, isObservable, isMachine, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, uniqueId } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { isActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService } from './devTools.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\n/**\r\n * Maintains a stack of the current service in scope.\r\n * This is used to provide the correct service to spawn().\r\n *\r\n * @private\r\n */\n\nvar withServiceScope =\n/*#__PURE__*/\nfunction () {\n  var serviceStack = [];\n  return function (service, fn) {\n    service && serviceStack.push(service);\n    var result = fn(service || serviceStack[serviceStack.length - 1]);\n    service && serviceStack.pop();\n    return result;\n  };\n}();\n\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this._status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this._status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to stopped service \\\"\" + _this.machine.id + \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n\n        return _this.state;\n      }\n\n      if (_this._status === InterpreterStatus.NotStarted && _this.options.deferEvents) {\n        // tslint:disable-next-line:no-console\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\" and is deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n      } else if (_this._status !== InterpreterStatus.Running) {\n        throw new Error(\"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \" + JSON.stringify(_event.data));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isActor(to) ? to : _this.children.get(to) || registry.get(to);\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\" + to + \"' from service '\" + _this.id + \"'.\");\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\" + _this.id + \"' has no parent: unable to send event \" + event.type);\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\" + error(_this.id) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return withServiceScope(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this._status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\" + this.id + \"'. Make sure the service is started first.\");\n      }\n\n      return this._state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Dev tools\n\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.data ? mapContext(finalChildStateNode.data, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, // @ts-ignore\n  errorListener, completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this._status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : withServiceScope(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    } // Stop all children\n\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.initialized = false;\n    this._status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(event));\n      }\n    } else if (this._status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\");\n    }\n\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = withServiceScope(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spread(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = withServiceScope(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\" + event + \"' from interpreter '\" + this.id + \"' to nonexistant child '\" + id + \"'.\");\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = getActionFunction(action.type, actionFunctionMap) || action.exec;\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[activity.src] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\" + activity.src + \"' in in machine '\" + this.machine.id + \"'). \" + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\" + activity.src + \"' in machine '\" + this.machine.id + \"'.\");\n              }\n\n              return;\n            }\n\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data) : serviceCreator;\n\n            if (isPromiseLike(source)) {\n              this.state.children[id] = this.spawnPromise(Promise.resolve(source), id);\n            } else if (isFunction(source)) {\n              this.state.children[id] = this.spawnCallback(source, id);\n            } else if (isObservable(source)) {\n              this.state.children[id] = this.spawnObservable(source, id);\n            } else if (isMachine(source)) {\n              // TODO: try/catch here\n              this.state.children[id] = this.spawnMachine(data ? source.withContext(mapContext(data, context, _event)) : source, {\n                id: id,\n                autoForward: autoForward\n              });\n            }\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\" + action.type + \"'\");\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId);\n    delete this.state.children[childId];\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isActor(entity)) {\n      return this.spawnActor(entity);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\" + name + \"\\\" of type \\\"\" + typeof entity + \"\\\".\");\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    return actor;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n\n    var canceled = false;\n    promise.then(function (response) {\n      if (!canceled) {\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          next && next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          complete && complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          handleError(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n\n    var receive = function (e) {\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(e);\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n\n    var subscription = source.subscribe(function (value) {\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor) {\n    this.children.set(actor.id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\" + activity.type + \"'\");\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    });\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    if (this.options.devTools && typeof window !== 'undefined') {\n      if (window.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions =\n  /*#__PURE__*/\n  function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return global.setTimeout.call(null, fn, ms);\n        },\n        clearTimeout: function (id) {\n          return global.clearTimeout.call(null, id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof window === 'undefined' ? global : window);\n\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar createNullActor = function (name) {\n  if (name === void 0) {\n    name = 'null';\n  }\n\n  return {\n    id: name,\n    send: function () {\n      return void 0;\n    },\n    subscribe: function () {\n      // tslint:disable-next-line:no-empty\n      return {\n        unsubscribe: function () {}\n      };\n    },\n    toJSON: function () {\n      return {\n        id: name\n      };\n    }\n  };\n};\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return withServiceScope(undefined, function (service) {\n    if (!IS_PRODUCTION) {\n      warn(!!service, \"Attempted to spawn an Actor (ID: \\\"\" + (isMachine(entity) ? entity.id : 'undefined') + \"\\\") outside of a service. This will have no effect.\");\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createNullActor(resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, interpret, spawn };"]},"metadata":{},"sourceType":"module"}