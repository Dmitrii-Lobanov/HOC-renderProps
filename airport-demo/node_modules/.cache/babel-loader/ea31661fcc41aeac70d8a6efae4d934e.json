{"ast":null,"code":"import _slicedToArray from \"/Users/dmitriilobanov/Documents/projects/airport-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmitriilobanov/Documents/projects/airport-demo/src/components/scan/ScanTicket.js\";\nimport React, { useState } from 'react';\nimport OptionsContainer from '../../containers/OptionsContainer';\nimport ScanInput from './ScanInput';\nimport ScanButton from './ScanButton';\nimport { connect } from 'react-redux';\nimport getCurrentUser from '../../store/actions/actions';\n\nfunction ScanTicket({\n  passengers,\n  isBackClicked,\n  getCurrentUser\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSubmitClicked = _useState4[0],\n        setIsSubmitClicked = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isScanBtnClicked = _useState6[0],\n        setIsScanBtnClicked = _useState6[1];\n\n  function onScanButton() {\n    setIsScanBtnClicked(true);\n  }\n\n  function handleChange(e) {\n    setUser(e.target.value);\n  }\n\n  function handleSubmit() {\n    console.log('Passenger: ', passenger);\n    getCurrentUser(user);\n    setIsSubmitClicked(true);\n  }\n\n  const _ = require('lodash');\n\n  const passenger = _.find(passengers, function (o) {\n    return o.ticketNumber === user;\n  });\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, isBackClicked && React.createElement(OptionsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), !isBackClicked && React.createElement(React.Fragment, null, React.createElement(ScanInput, {\n    user: user,\n    handleChange: handleChange,\n    isSubmitClicked: isSubmitClicked,\n    isScanBtnClicked: isScanBtnClicked,\n    handleSubmit: handleSubmit,\n    passenger: passenger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ScanButton, {\n    passengers: passengers,\n    onScanButton: onScanButton,\n    isSubmitClicked: isSubmitClicked,\n    isScanBtnClicked: isScanBtnClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isBackClicked: state.ui.isBackBtnClicked,\n    passengers: state.passengers,\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, getCurrentUser)(ScanTicket);","map":{"version":3,"sources":["/Users/dmitriilobanov/Documents/projects/airport-demo/src/components/scan/ScanTicket.js"],"names":["React","useState","OptionsContainer","ScanInput","ScanButton","connect","getCurrentUser","ScanTicket","passengers","isBackClicked","user","setUser","isSubmitClicked","setIsSubmitClicked","isScanBtnClicked","setIsScanBtnClicked","onScanButton","handleChange","e","target","value","handleSubmit","console","log","passenger","_","require","find","o","ticketNumber","mapStateToProps","state","ui","isBackBtnClicked","currentUser"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BH,EAAAA;AAA7B,CAApB,EAAmE;AAAA,oBACvCL,QAAQ,CAAC,EAAD,CAD+B;AAAA;AAAA,QACxDS,IADwD;AAAA,QAClDC,OADkD;;AAAA,qBAEjBV,QAAQ,CAAC,KAAD,CAFS;AAAA;AAAA,QAExDW,eAFwD;AAAA,QAEvCC,kBAFuC;;AAAA,qBAGfZ,QAAQ,CAAC,KAAD,CAHO;AAAA;AAAA,QAGxDa,gBAHwD;AAAA,QAGtCC,mBAHsC;;AAK/D,WAASC,YAAT,GAAwB;AACpBD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;;AAED,WAASE,YAAT,CAAsBC,CAAtB,EAAyB;AACrBP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,YAAT,GAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,SAA3B;AACAlB,IAAAA,cAAc,CAACI,IAAD,CAAd;AACAG,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,QAAMY,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,QAAMF,SAAS,GAAGC,CAAC,CAACE,IAAF,CAAOnB,UAAP,EAAmB,UAASoB,CAAT,EAAY;AAC7C,WAAOA,CAAC,CAACC,YAAF,KAAmBnB,IAA1B;AACH,GAFiB,CAAlB;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,aAAa,IAAI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,EAEM,CAACA,aAAD,IAAkB,0CAAE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEC,IADR;AAEE,IAAA,YAAY,EAAEO,YAFhB;AAGE,IAAA,eAAe,EAAEL,eAHnB;AAIE,IAAA,gBAAgB,EAAEE,gBAJpB;AAKE,IAAA,YAAY,EAAEO,YALhB;AAME,IAAA,SAAS,EAAEG,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,EAQA,oBAAC,UAAD;AACI,IAAA,UAAU,EAAEhB,UADhB;AAEI,IAAA,YAAY,EAAEQ,YAFlB;AAGI,IAAA,eAAe,EAAEJ,eAHrB;AAII,IAAA,gBAAgB,EAAEE,gBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CAFxB,CADJ;AAmBH;;AAED,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHtB,IAAAA,aAAa,EAAEsB,KAAK,CAACC,EAAN,CAASC,gBADrB;AAEHzB,IAAAA,UAAU,EAAEuB,KAAK,CAACvB,UAFf;AAGH0B,IAAAA,WAAW,EAAEH,KAAK,CAACG;AAHhB,GAAP;AAKH,CAND;;AAQA,eAAe7B,OAAO,CAClByB,eADkB,EAElBxB,cAFkB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport OptionsContainer from '../../containers/OptionsContainer';\nimport ScanInput from './ScanInput';\nimport ScanButton from './ScanButton';\nimport { connect } from 'react-redux';\nimport getCurrentUser from '../../store/actions/actions';\n\nfunction ScanTicket({ passengers, isBackClicked, getCurrentUser }) {\n    const [user, setUser] = useState('');\n    const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n    const [isScanBtnClicked, setIsScanBtnClicked] = useState(false);\n\n    function onScanButton() {\n        setIsScanBtnClicked(true);\n    }\n\n    function handleChange(e) {\n        setUser(e.target.value);        \n    }\n\n    function handleSubmit() {\n        console.log('Passenger: ', passenger);\n        getCurrentUser(user);\n        setIsSubmitClicked(true);\n    }\n\n    const _ = require('lodash');\n\n    const passenger = _.find(passengers, function(o) {\n        return o.ticketNumber === user;\n    });\n\n    return (\n        <div>\n            { isBackClicked && <OptionsContainer /> }\n            { !isBackClicked && <><ScanInput \n                                    user={user} \n                                    handleChange={handleChange} \n                                    isSubmitClicked={isSubmitClicked} \n                                    isScanBtnClicked={isScanBtnClicked} \n                                    handleSubmit={handleSubmit}\n                                    passenger={passenger}\n                                />\n                                <ScanButton \n                                    passengers={passengers} \n                                    onScanButton={onScanButton} \n                                    isSubmitClicked={isSubmitClicked} \n                                    isScanBtnClicked={isScanBtnClicked}    \n                                /></> }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isBackClicked: state.ui.isBackBtnClicked,\n        passengers: state.passengers,\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    getCurrentUser\n)(ScanTicket);"]},"metadata":{},"sourceType":"module"}