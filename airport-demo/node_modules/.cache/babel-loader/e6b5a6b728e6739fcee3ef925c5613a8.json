{"ast":null,"code":"function createNullActor(id) {\n  return {\n    id: id,\n    send: function () {\n      return void 0;\n    },\n    subscribe: function () {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    },\n    toJSON: function () {\n      return {\n        id: id\n      };\n    }\n  };\n}\n/**\r\n * Creates a null actor that is able to be invoked given the provided\r\n * invocation information in its `.meta` value.\r\n *\r\n * @param invokeDefinition The meta information needed to invoke the actor.\r\n */\n\n\nfunction createInvocableActor(invokeDefinition) {\n  var tempActor = createNullActor(invokeDefinition.id);\n  tempActor.meta = invokeDefinition;\n  return tempActor;\n}\n\nfunction isActor(item) {\n  try {\n    return typeof item.send === 'function';\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { createInvocableActor, createNullActor, isActor };","map":{"version":3,"sources":["/Users/dmitriilobanov/Documents/projects/airport-demo/node_modules/xstate/es/Actor.js"],"names":["createNullActor","id","send","subscribe","unsubscribe","toJSON","createInvocableActor","invokeDefinition","tempActor","meta","isActor","item","e"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,EAAzB,EAA6B;AAC3B,SAAO;AACLA,IAAAA,EAAE,EAAEA,EADC;AAELC,IAAAA,IAAI,EAAE,YAAY;AAChB,aAAO,KAAK,CAAZ;AACD,KAJI;AAKLC,IAAAA,SAAS,EAAE,YAAY;AACrB,aAAO;AACLC,QAAAA,WAAW,EAAE,YAAY;AACvB,iBAAO,KAAK,CAAZ;AACD;AAHI,OAAP;AAKD,KAXI;AAYLC,IAAAA,MAAM,EAAE,YAAY;AAClB,aAAO;AACLJ,QAAAA,EAAE,EAAEA;AADC,OAAP;AAGD;AAhBI,GAAP;AAkBD;AACD;;;;;;;;AAQA,SAASK,oBAAT,CAA8BC,gBAA9B,EAAgD;AAC9C,MAAIC,SAAS,GAAGR,eAAe,CAACO,gBAAgB,CAACN,EAAlB,CAA/B;AACAO,EAAAA,SAAS,CAACC,IAAV,GAAiBF,gBAAjB;AACA,SAAOC,SAAP;AACD;;AAED,SAASE,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,MAAI;AACF,WAAO,OAAOA,IAAI,CAACT,IAAZ,KAAqB,UAA5B;AACD,GAFD,CAEE,OAAOU,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF;;AAED,SAASN,oBAAT,EAA+BN,eAA/B,EAAgDU,OAAhD","sourcesContent":["function createNullActor(id) {\n  return {\n    id: id,\n    send: function () {\n      return void 0;\n    },\n    subscribe: function () {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    },\n    toJSON: function () {\n      return {\n        id: id\n      };\n    }\n  };\n}\n/**\r\n * Creates a null actor that is able to be invoked given the provided\r\n * invocation information in its `.meta` value.\r\n *\r\n * @param invokeDefinition The meta information needed to invoke the actor.\r\n */\n\n\nfunction createInvocableActor(invokeDefinition) {\n  var tempActor = createNullActor(invokeDefinition.id);\n  tempActor.meta = invokeDefinition;\n  return tempActor;\n}\n\nfunction isActor(item) {\n  try {\n    return typeof item.send === 'function';\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { createInvocableActor, createNullActor, isActor };"]},"metadata":{},"sourceType":"module"}