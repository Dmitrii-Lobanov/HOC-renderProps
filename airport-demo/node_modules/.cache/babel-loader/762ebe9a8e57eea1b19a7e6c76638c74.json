{"ast":null,"code":"import _slicedToArray from \"/Users/dmitriilobanov/Documents/projects/airport-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmitriilobanov/Documents/projects/airport-demo/src/components/options/Options.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { withTranslation } from 'react-i18next';\nimport i18n from '../../i18n/i18n';\nimport ScanTicket from '../scan/ScanTicket';\nimport Maps from '../maps/Maps';\nimport Services from '../services/Services';\nimport FlightScheduleContainer from '../../containers/FlightScheduleContainer';\nimport chooseLanguage from '../../store/actions/actions';\nimport isBackBtnClicked from '../../store/actions/actions';\nimport Header from '../header/Header';\nimport OptionsContent from './OptionsContent';\n\nfunction Options({\n  lng,\n  chooseLanguage,\n  isBackClicked,\n  isBackBtnClicked\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isScheduleClicked = _useState2[0],\n        setIsScheduleClicked = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isScanClicked = _useState4[0],\n        setIsScanClicked = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isMapsClicked = _useState6[0],\n        setIsMapsClicked = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isServicesClicked = _useState8[0],\n        setIsServicesClicked = _useState8[1];\n\n  const _useState9 = useState(lng),\n        _useState10 = _slicedToArray(_useState9, 2),\n        currLng = _useState10[0],\n        setCurrLang = _useState10[1];\n\n  console.log('Options isBackClicked', isBackClicked);\n  useEffect(() => {\n    onLanguageChange();\n  }, []);\n\n  function onLanguageChange() {\n    if (currLng === 'ru') setCurrLang('en');\n    if (currLng === 'en') setCurrLang('ru');\n    i18n.changeLanguage(lng);\n    chooseLanguage(currLng);\n  }\n\n  console.log('Options lng:', lng);\n\n  function hasOptionClicked(option) {\n    switch (option) {\n      case 'flightSchedule':\n        setIsScheduleClicked(true);\n        setIsScanClicked(false);\n        setIsMapsClicked(false);\n        setIsServicesClicked(false);\n        isBackBtnClicked(false);\n        break;\n\n      case 'scanTicket':\n        setIsScheduleClicked(false);\n        setIsScanClicked(true);\n        setIsMapsClicked(false);\n        setIsServicesClicked(false);\n        isBackBtnClicked(false);\n        break;\n\n      case 'maps':\n        setIsScheduleClicked(false);\n        setIsScanClicked(false);\n        setIsMapsClicked(true);\n        setIsServicesClicked(false);\n        isBackBtnClicked(false);\n        break;\n\n      case 'services':\n        setIsScheduleClicked(false);\n        setIsScanClicked(false);\n        setIsMapsClicked(false);\n        setIsServicesClicked(true);\n        isBackBtnClicked(false);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), isScheduleClicked && !isBackClicked && React.createElement(FlightScheduleContainer, {\n    lng: lng,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), isScanClicked && !isBackClicked && React.createElement(ScanTicket, {\n    lng: lng,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), isMapsClicked && !isBackClicked && React.createElement(Maps, {\n    lng: lng,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), isServicesClicked && !isBackClicked && React.createElement(Services, {\n    lng: lng,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), isBackClicked && React.createElement(OptionsContent, {\n    isBackBtnClicked: isBackBtnClicked,\n    hasOptionClicked: hasOptionClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    lng: state.ui.lng,\n    isBackClicked: state.ui.isBackBtnClicked\n  };\n};\n\nconst mapDispatchToProps = {\n  chooseLanguage,\n  isBackBtnClicked\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation()(Options));","map":{"version":3,"sources":["/Users/dmitriilobanov/Documents/projects/airport-demo/src/components/options/Options.js"],"names":["React","useState","useEffect","connect","withTranslation","i18n","ScanTicket","Maps","Services","FlightScheduleContainer","chooseLanguage","isBackBtnClicked","Header","OptionsContent","Options","lng","isBackClicked","isScheduleClicked","setIsScheduleClicked","isScanClicked","setIsScanClicked","isMapsClicked","setIsMapsClicked","isServicesClicked","setIsServicesClicked","currLng","setCurrLang","console","log","onLanguageChange","changeLanguage","hasOptionClicked","option","mapStateToProps","state","ui","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { withTranslation } from 'react-i18next';\nimport i18n from '../../i18n/i18n';\nimport ScanTicket from '../scan/ScanTicket';\nimport Maps from '../maps/Maps';\nimport Services from '../services/Services';\nimport FlightScheduleContainer from '../../containers/FlightScheduleContainer';\nimport chooseLanguage from '../../store/actions/actions';\nimport isBackBtnClicked from '../../store/actions/actions'; \nimport Header from '../header/Header';\nimport OptionsContent from './OptionsContent';\n\nfunction Options({ lng, chooseLanguage, isBackClicked, isBackBtnClicked }) {\n    const [isScheduleClicked, setIsScheduleClicked] = useState(false);\n    const [isScanClicked, setIsScanClicked] = useState(false);\n    const [isMapsClicked, setIsMapsClicked] = useState(false);\n    const [isServicesClicked, setIsServicesClicked] = useState(false);\n    const [currLng, setCurrLang] = useState(lng);\n\n    console.log('Options isBackClicked', isBackClicked);\n\n    useEffect(() => {\n        onLanguageChange();\n    }, []);\n\n    function onLanguageChange() {\n        if(currLng === 'ru') setCurrLang('en');\n        if(currLng === 'en') setCurrLang('ru');\n        i18n.changeLanguage(lng);\n        chooseLanguage(currLng);\n    }\n\n    console.log('Options lng:', lng);  \n    \n    function hasOptionClicked(option) {\n        switch(option) {\n            case 'flightSchedule':\n                setIsScheduleClicked(true);\n                setIsScanClicked(false);\n                setIsMapsClicked(false);\n                setIsServicesClicked(false);\n                isBackBtnClicked(false);\n                break;\n           case 'scanTicket':\n                setIsScheduleClicked(false);\n                setIsScanClicked(true);\n                setIsMapsClicked(false);\n                setIsServicesClicked(false);\n                isBackBtnClicked(false);\n                break;\n            case 'maps':\n                setIsScheduleClicked(false);\n                setIsScanClicked(false);\n                setIsMapsClicked(true);\n                setIsServicesClicked(false);\n                isBackBtnClicked(false);\n                break;\n            case 'services':\n                setIsScheduleClicked(false);\n                setIsScanClicked(false);\n                setIsMapsClicked(false);\n                setIsServicesClicked(true);\n                isBackBtnClicked(false);\n                break;\n            default:\n                return;\n        }\n    }\n\n    return (\n        <>\n            <Header />\n            {isScheduleClicked && !isBackClicked && <FlightScheduleContainer lng={lng} /> }\n            {isScanClicked && !isBackClicked && <ScanTicket lng={lng} /> }\n            {isMapsClicked && !isBackClicked && <Maps lng={lng} /> }\n            {isServicesClicked && !isBackClicked && <Services lng={lng} /> }\n            {isBackClicked && <OptionsContent \n                    isBackBtnClicked={isBackBtnClicked} \n                    hasOptionClicked={hasOptionClicked}\n            /> }\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        lng: state.ui.lng,\n        isBackClicked: state.ui.isBackBtnClicked\n    }\n}\n\nconst mapDispatchToProps = {\n        chooseLanguage,\n        isBackBtnClicked\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(Options));"]},"metadata":{},"sourceType":"module"}