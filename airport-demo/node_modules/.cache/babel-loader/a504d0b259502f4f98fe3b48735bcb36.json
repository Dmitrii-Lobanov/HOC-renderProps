{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriilobanov/Documents/projects/airport-demo/src/components/options/OptionsContent.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withTranslation } from 'react-i18next';\n\nfunction OptionsContent({\n  t,\n  isBackBtnClicked,\n  hasScheduleClicked,\n  hasScanClicked,\n  hasMapsClicked,\n  hasServicesClicked,\n  settings,\n  hasOptionClicked\n}) {\n  return React.createElement(\"div\", {\n    className: \"options-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, settings.flightSchedule.enabled && React.createElement(\"button\", {\n    onClick: () => hasOptionClicked('flightSchedule'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, t('Options.schedule')), settings.scanTicket.enabled && React.createElement(\"button\", {\n    onClick: () => hasOptionClicked('scanTicket'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, t('Options.scan')), settings.maps.enabled && React.createElement(\"button\", {\n    onClick: () => hasOptionClicked('maps'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, t('Options.maps')), settings.services.enabled && React.createElement(\"button\", {\n    onClick: () => hasOptionClicked('services'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, t('Options.services')));\n}\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.ui.settings\n  };\n};\n\nexport default connect(mapStateToProps)(withTranslation()(OptionsContent));","map":{"version":3,"sources":["/Users/dmitriilobanov/Documents/projects/airport-demo/src/components/options/OptionsContent.js"],"names":["React","connect","withTranslation","OptionsContent","t","isBackBtnClicked","hasScheduleClicked","hasScanClicked","hasMapsClicked","hasServicesClicked","settings","hasOptionClicked","flightSchedule","enabled","scanTicket","maps","services","mapStateToProps","state","ui"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,CAAF;AAAKC,EAAAA,gBAAL;AAAuBC,EAAAA,kBAAvB;AAA2CC,EAAAA,cAA3C;AAA2DC,EAAAA,cAA3D;AAA2EC,EAAAA,kBAA3E;AAA+FC,EAAAA,QAA/F;AAAyGC,EAAAA;AAAzG,CAAxB,EAAqJ;AAEjJ,SACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOD,QAAQ,CAACE,cAAT,CAAwBC,OAAxB,IAAmC;AAAQ,IAAA,OAAO,EAAE,MAAMF,gBAAgB,CAAC,gBAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DP,CAAC,CAAC,kBAAD,CAA7D,CAD1C,EAEOM,QAAQ,CAACI,UAAT,CAAoBD,OAApB,IAA+B;AAAQ,IAAA,OAAO,EAAE,MAAMF,gBAAgB,CAAC,YAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDP,CAAC,CAAC,cAAD,CAAzD,CAFtC,EAGOM,QAAQ,CAACK,IAAT,CAAcF,OAAd,IAAyB;AAAQ,IAAA,OAAO,EAAE,MAAMF,gBAAgB,CAAC,MAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDP,CAAC,CAAC,cAAD,CAAnD,CAHhC,EAIOM,QAAQ,CAACM,QAAT,CAAkBH,OAAlB,IAA6B;AAAQ,IAAA,OAAO,EAAE,MAAMF,gBAAgB,CAAC,UAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDP,CAAC,CAAC,kBAAD,CAAvD,CAJpC,CADJ;AAQH;;AAED,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACC,EAAN,CAAST;AADhB,GAAP;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAClBgB,eADkB,CAAP,CAEbf,eAAe,GAAGC,cAAH,CAFF,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withTranslation } from 'react-i18next';\n\nfunction OptionsContent({ t, isBackBtnClicked, hasScheduleClicked, hasScanClicked, hasMapsClicked, hasServicesClicked, settings, hasOptionClicked }) {\n    \n    return (\n        <div className=\"options-container\">\n             { settings.flightSchedule.enabled && <button onClick={() => hasOptionClicked('flightSchedule')}>{t('Options.schedule')}</button> }\n             { settings.scanTicket.enabled && <button onClick={() => hasOptionClicked('scanTicket')}>{t('Options.scan')}</button> }\n             { settings.maps.enabled && <button onClick={() => hasOptionClicked('maps')}>{t('Options.maps')}</button> }\n             { settings.services.enabled && <button onClick={() => hasOptionClicked('services')}>{t('Options.services')}</button> }\n         </div>       \n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        settings: state.ui.settings\n    }\n}\n\nexport default connect(\n    mapStateToProps\n)(withTranslation()(OptionsContent));"]},"metadata":{},"sourceType":"module"}